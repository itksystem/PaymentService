class OrderDto {

    constructor(dbRecord) {
        this.orderId = dbRecord.order_id || undefined;
        this.userId = dbRecord.user_id || undefined;
        this.totalAmount = dbRecord.totalAmount || undefined;
        this.status = dbRecord.status || 'NEW';
        this.createdAt = dbRecord.created_at || null;
        this.updatedAt = dbRecord.updated_at || undefined;
        this.referenceId = dbRecord.reference_id || undefined;
    }


// Функция для проверки валидности статуса
     isValidOrderStatus(status) {
          return Object.values(OrderStatus).includes(status);
    }

    // Getters
    getOrderId() {
        return this.orderId;
    }

    getUserId() {
        return this.userId;
    }

    getTotalAmount() {
        return this.totalAmount;
    }

    getStatus() {
        return this.status;
    }

    getCreatedAt() {
        return this.createdAt;
    }

    getUpdatedAt() {
        return this.updatedAt;
    }

    getBillingTransactionId() {
        return this.billingTransactionId;
    }

    // Setters
    setOrderId(orderId) {
        this.orderId = orderId;
    }

    setUserId(userId) {
        this.userId = userId;
    }

    setTotalAmount(totalAmount) {
        this.totalAmount = totalAmount;
    }

    setStatus(status) {
        if (Object.values(OrderStatus).includes(status)) {
            this.status = status;
        } else {
            throw new Error('Invalid status value');
        }
    }
    setCreatedAt(createdAt) {
        this.createdAt = createdAt;
    }

    setUpdatedAt(updatedAt) {
        this.updatedAt = updatedAt;
    }

    setReferenceId(referenceId) {
        this.referenceId = referenceId;
    }
}

module.exports = OrderDto;
